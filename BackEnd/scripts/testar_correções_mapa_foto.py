"""
Script para testar as corre√ß√µes implementadas:
1. Consist√™ncia da foto de perfil
2. Exibi√ß√£o de cartas descobertas no mapa
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from models.carta_model import CartaModel
from models.colecao_model import ColecaoModel
from models.usuario_model import UsuarioModel

def testar_estrutura_cartas():
    """Testar se as cartas t√™m as informa√ß√µes necess√°rias para o mapa"""
    print("üó∫Ô∏è  Testando estrutura das cartas para o mapa...")
    
    carta_model = CartaModel()
    result = carta_model.find_all()
    
    if result["success"]:
        cartas = result["data"]
        print(f"Total de cartas encontradas: {len(cartas)}")
        
        # Verificar se as cartas t√™m localiza√ß√£o
        cartas_com_localizacao = [c for c in cartas if c.get("localizacao")]
        print(f"Cartas com localiza√ß√£o: {len(cartas_com_localizacao)}")
        
        # Mostrar algumas localiza√ß√µes exemplo
        print("\nLocaliza√ß√µes encontradas:")
        for carta in cartas_com_localizacao[:5]:
            print(f"  - {carta['qrcode']}: {carta['localizacao']}")
        
        return True
    else:
        print(f"‚ùå Erro ao buscar cartas: {result['error']}")
        return False

def testar_colecao_usuario(nickname="testuser"):
    """Testar se conseguimos buscar a cole√ß√£o de um usu√°rio"""
    print(f"\nüìö Testando cole√ß√£o do usu√°rio '{nickname}'...")
    
    colecao_model = ColecaoModel()
    result = colecao_model.get_colecao_usuario(nickname)
    
    if result["success"]:
        colecao = result["data"]
        print(f"Cartas na cole√ß√£o: {len(colecao)}")
        
        # Mostrar algumas cartas da cole√ß√£o
        for item in colecao[:3]:
            if isinstance(item, dict) and "carta" in item:
                carta = item["carta"]
                print(f"  - {carta.get('qrcode', 'N/A')}: {carta.get('localizacao', 'Sem localiza√ß√£o')}")
            else:
                print(f"  - Item: {item}")
        
        return True
    else:
        print(f"‚ùå Erro ao buscar cole√ß√£o: {result['error']}")
        return False

def testar_foto_perfil_usuario(nickname="testuser"):
    """Testar se conseguimos buscar a foto de perfil do usu√°rio"""
    print(f"\nüë§ Testando foto de perfil do usu√°rio '{nickname}'...")
    
    usuario_model = UsuarioModel()
    result = usuario_model.find_by_nickname(nickname)
    
    if result["success"]:
        usuario = result["data"]
        if usuario:
            fotoperfil = usuario.get("fotoperfil")
            if fotoperfil:
                print(f"‚úÖ Usu√°rio tem foto de perfil: {fotoperfil[:50]}...")
            else:
                print("‚ö†Ô∏è  Usu√°rio n√£o tem foto de perfil configurada")
            return True
        else:
            print(f"‚ùå Usu√°rio '{nickname}' n√£o encontrado")
            return False
    else:
        print(f"‚ùå Erro ao buscar usu√°rio: {result['error']}")
        return False

def testar_mapeamento_localizacoes():
    """Testar o mapeamento de localiza√ß√µes conhecidas"""
    print("\nüó∫Ô∏è  Testando mapeamento de localiza√ß√µes...")
    
    # Localiza√ß√µes conhecidas que devem ter coordenadas
    localizacoes_esperadas = [
        "Pr√©dio Principal - ESALQ",
        "Biblioteca Central",
        "Departamento de Ci√™ncias Exatas",
        "Jardim Bot√¢nico",
        "Museu de Mineralogia"
    ]
    
    carta_model = CartaModel()
    
    for localizacao in localizacoes_esperadas:
        result = carta_model.find_by_localizacao(localizacao)
        if result["success"] and result["data"]:
            print(f"‚úÖ Localiza√ß√£o '{localizacao}': {len(result['data'])} carta(s)")
        else:
            print(f"‚ö†Ô∏è  Localiza√ß√£o '{localizacao}': nenhuma carta encontrada")

def main():
    print("üß™ Testando corre√ß√µes implementadas...\n")
    
    # Teste 1: Estrutura das cartas
    teste1 = testar_estrutura_cartas()
    
    # Teste 2: Cole√ß√£o do usu√°rio
    teste2 = testar_colecao_usuario()
    
    # Teste 3: Foto de perfil
    teste3 = testar_foto_perfil_usuario()
    
    # Teste 4: Mapeamento de localiza√ß√µes
    testar_mapeamento_localizacoes()
    
    print("\nüìä Resumo dos testes:")
    print(f"Estrutura das cartas: {'‚úÖ' if teste1 else '‚ùå'}")
    print(f"Cole√ß√£o do usu√°rio: {'‚úÖ' if teste2 else '‚ùå'}")
    print(f"Foto de perfil: {'‚úÖ' if teste3 else '‚ùå'}")
    
    if teste1 and teste2:
        print("\nüéâ Sistema est√° pronto para mostrar cartas descobertas no mapa!")
    else:
        print("\n‚ö†Ô∏è  Alguns problemas encontrados. Verifique os logs acima.")

if __name__ == "__main__":
    main()
